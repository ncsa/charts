# Default values for clowder.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: clowder
  name: clowder
  tag: 1.13.0
  checks: "ncsa/checks:1.0.0"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## replicaCount the number of instances of the clowder application to run in parallel.
replicaCount: 1

## memory to be allocated to the clowder process.
memory: 2048

## List of admins for Clowder. These people will at every restart of clowder be given admin
## priveleges. Can also be used to recover system by giving existing user admin rights.
initialAdmins:
#  - admin@example.com

## Should the admin be required to approve all new users. Setting this to false will result
## in all new users immediately be given access to Clowder.
registerThroughAdmins: true

## Administrator key. This key will give administrator level access to Clowder and is not
## associated with any user. This is deprecated and should not be used.
#commKey:

## Secret key used for cookies. This should be set the same for all clowder instances in
## a replicated setup. Best is for kubernetes to generate a random key.
#secretKey:

## List of initial users. These users will be added after clowder is installed. The
## users will still need to accept the data policy.
## email     : Email address, also used to login
## password  : Initial password, if not set a random password is generated
## firstname : First name of the user
## lastname  : Last name of the user
## admin     : should user be given admin privileges
users:
  - email: admin@example.com
    #password: secret
    firstname: Admin
    lastname: User
    admin: true

## idleTimeoutInMinutes the time in minutes that your session is valid for until clowder
## logs you out.
idleTimeoutInMinutes: 30

## extraOptions for the clowder process. Memory is set using the memory value.
extraOptions:
#  - --test
#  - --debug

## extraPlugins list of additional plugins should be enabled. This will allow you to add
## additional login mechanisms
extraPlugins:
#  - 10002:securesocial.core.providers.GoogleProvider
#  - 10005:securesocial.core.providers.GitHubProvider
#  - 10010:services.ORCIDProvider

## extraConfig list of additional configuration options to set for clowder.
extraConfig:
#  - permissions = "private"
#  - enablePublic = true
#  - verifySpaces = false


# ----------------------------------------------------------------------
# Configure the ingress object to hook into existing infastructure
# ref : http://kubernetes.io/docs/user-guide/ingress/
#
ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: "nginx"
  # hosts:
  #   - clowder.localhost
  path: /
  tls:
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  # should clowder assume SSL connections
  ssl: true

service:
  ## ServiceType
  ## ref: https://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
  type: ClusterIP
  ## Optional static port assignment for service type NodePort.
  # nodePort: 30000
  port: 9000

## SMTP configration values. Clowder will send emails when users register, added/removed from
## a space, etc. 
smtp:
  ## will print email to console, but will not send any actual emaisl
  mock: false
  ## host to use when sending emails
  ## TODO add user/password
  host: smtp

# ----------------------------------------------------------------------
# EXTRACTORS
# ----------------------------------------------------------------------

## list of extractors to be installed. Each extractor should have the
## following fields:
## enabled      : true/false - should the extractor be installed
## image        : dokeer/image:tag - the extractor docker image
## replicaCount : number - the number of this extractor to install
## env          : additional environment variables to pass to extractor.
extractors:
  file-digest:
    image: clowder/extractors-digest:2.1.6
    #enabled: true
    #replicaCount: 1
    #pullPolicy: Always
    # env:
    #   - name: foo
    #     value: "bar"
  image-preview:
    image: clowder/extractors-image-preview:2.1.5
  image-metadata:
    image: clowder/extractors-image-metadata:2.1.5
  audio-preview:
    image: clowder/extractors-audio-preview:2.1.5
  pdf-preview:
    image: clowder/extractors-pdf-preview:2.1.5
  video-preview:
    image: clowder/extractors-video-preview:2.1.5
  clamav:
    image: clowder/extractors-clamav:1.0.3

# ----------------------------------------------------------------------
# DATA STORAGE
# ----------------------------------------------------------------------

## Where should clowder store the files. The default is to use disk storage that is
## mounted into the clowder pod.
storage:
  disk:

  ## S3 storage, this uses S3 storage, following are parameters needed
  ## bucket: the bucket data is written
  ## region: what datacenter the data is stored at
  ## endpoint: URL to access the data
  ## access_key: needed to access the data
  ## secret_key: needed to access the data
  ## If minio is enabled, the values for minio are used
  # s3:
  #   bucket: clowder
  #   region: us-east-1
  #   endpoint: https://clowder.s3-us-east-1.amazonaws.com
  #   access_key: access_key
  #   secret_key: secret_key

# ----------------------------------------------------------------------
# MINIO
# ----------------------------------------------------------------------
minio:
  enabled: false

  accessKey:
    password: clowder
  secretKey:
    password: catsarecute
    
  persistence:
    size: 20Gi

## ----------------------------------------------------------------------
## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  # existingClaim:

  ## The path the volume will be mounted at
  ##
  mountPath: /home/clowder/data

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  #storageClass: "-"

  ## sisze of the storage class
  size: 20Gi

  ## Annotations
  annotations: {}


# ----------------------------------------------------------------------
monitor:
  enabled: true
  replicaCount: 1
  service:
    ## ServiceType
    ## ref: https://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
    type: ClusterIP
    ## Optional static port assignment for service type NodePort.
    # nodePort: 30000
    port: 9999

# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# clowder requires mongodb to be able to run
#
mongodb:
  # either mongodb is installed as part of this chart, or you need to
  # specify the mongodb uri
  enabled: true
  #uri: mongobd://server:27017/database

  # clowder does not support passwords
  usePassword: false

  # clowder works with 3.6 only
  image:
   tag: 3.6

  mongodbDisableSystemLog: true

# ----------------------------------------------------------------------
# clowder uses rabbitmq to distribute messages, this is optional, but
# highly recommended. If you want to use extractors you need to install
# rabbitmq
#
rabbitmq:
  # either rabbitmq is installed as part of this chart, or you need to
  # specify the rabbitmq uri. If neither is specified rabbitmq will not
  # be used by clowder.
  enabled: true
  #uri: amqp://username:password@server/database

  auth:
    username: guest
    password: guest
    erlangCookie: kittencookie
    # extraConfiguration: |-
    #   management.path_prefix = /rabbitmq/

  ingress:
    enabled: false
    hostName: rabbitmq.localhost
    path: /

# ----------------------------------------------------------------------
# clowder uses elasticsearch to enable searching for metadata, as well
# as speeding up tag cloud etc.
#
elasticsearch:
  # either elasticsearch is installed as part of this chart, or you need
  # to specify the elasticsearch parameters manually.
  enabled: true

  # replicaCount is the number of elastic search nodes are part of the
  # cluster. It is best to have this 3 or higher in production.
  replicaCount: 1

# ----------------------------------------------------------------------
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## Hook Affinity
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
hooks:
  affinity: {}
