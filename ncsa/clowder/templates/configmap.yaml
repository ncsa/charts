apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "clowder.fullname" . }}-config
  labels:
{{ include "clowder.labels" . | indent 4 }}
data:
  play.plugins: |-
{{- if .Values.rabbitmq.enabled }}
    9992:services.RabbitmqPlugin
{{- end }}
{{- if .Values.elasticsearch.enabled }}
    10002:services.ElasticsearchPlugin
{{- end }}
{{- range .Values.extraPlugins }}
    {{ . }}
{{- end }}
  custom.conf: |-
    application.context="{{ .Values.ingress.path }}"
    securesocial.onLoginGoTo="{{ .Values.ingress.path }}"
    securesocial.onLogoutGoTo="{{ .Values.ingress.path }}"
    securesocial.ssl={{ .Values.ingress.ssl }}
    securesocial.cookie.idleTimeoutInMinutes={{ .Values.idleTimeoutInMinutes }}
    # security options
    application.secret=${?CLOWDER_SECRET}
    commKey=${?CLOWDER_KEY}
    # default admin and should admin approve everybody
    registerThroughAdmins={{ .Values.registerThroughAdmins }}
    initialAdmins={{ join "," .Values.initialAdmins | quote }}
    ehcacheplugin=enabled
    # email options
{{- if .Values.smtp.mock }}
    smtp.mock=true
{{- else }}
    smtp.host={{ .Values.smtp.host | default "stmp" | quote }}
{{- end }}
    # storage
{{- if .Values.minio.enabled }}
    service.byteStorage=services.s3.S3ByteStorageService
    clowder.s3.serviceEndpoint="http://{{ include "clowder.fullname" . }}-minio:9000"
    clowder.s3.bucketName="clowder"
    clowder.s3.accessKey=${?S3_ACCESSKEY}
    clowder.s3.secretKey=${?S3_SECRETKEY}
{{- else if .Values.storage.s3 }}
    service.byteStorage=services.s3.S3ByteStorageService
    clowder.s3.serviceEndpoint={{ .Values.storage.s3.endpoint | quote }}
    clowder.s3.bucketName={{ .Values.storage.s3.bucket | quote }}
{{- if .Values.storage.s3.region }}
    clowder.s3.region={{ .Values.storage.s3.region | quote }}
{{- end }}
    clowder.s3.accessKey=${?S3_ACCESSKEY}
    clowder.s3.secretKey=${?S3_SECRETKEY}
{{- else }}
    service.byteStorage=services.filesystem.DiskByteStorageService
    clowder.diskStorage.path="/home/clowder/data"
{{- end }}
    # mongo server
    mongodbURI=${?MONGODB_URI}
{{- if .Values.rabbitmq.enabled }}
    # rabbitmq
    clowder.rabbitmq.uri=${?RABBITMQ_URI}
    clowder.rabbitmq.exchange=clowder
    {{- if not .Values.ingress.enabled }}
    clowder.rabbitmq.clowderurl="{{- printf "http://%s:%.f%s" (include "clowder.fullname" . ) .Values.service.port .Values.ingress.path }}"
    {{- end }}
{{- end }}
{{- if .Values.elasticsearch.enabled }}
    # elasticsearch
  {{- if .Values.elasticsearch.elasticsearch }}
    elasticsearchSettings.clusterName={{ (index .Values.elasticsearch.elasticsearch.config "cluster.name") | default "clowder" | quote }}
  {{- else }}
    elasticsearchSettings.clusterName="clowder"
  {{- end }}
    elasticsearchSettings.serverAddress={{ include "clowder.fullname" . }}-elasticsearch-discovery
    elasticsearchSettings.serverPort=9300
{{- end }}
{{- range .Values.extraConfig }}
    {{ . }}
{{- end }}
